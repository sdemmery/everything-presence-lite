esphome:
  name: ${name}
  comment: Everything Presence Lite
  friendly_name: ${friendly_name}
  name_add_mac_suffix: True
  project:
    name: EverythingSmartTechnology.Everything Presence Lite
    version: "1.2.5"  # Updated to the latest version

  # On boot actions to handle power cycling of the BME280 sensor
  on_boot:
    priority: 600
    then:
      - switch.turn_on: bme280_power
      - delay: 500ms  # Wait for sensor to power up
      - sensor.update: bme280  # Trigger initial sensor read
      - switch.turn_off: bme280_power  # Turn off sensor after initial read

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:
  level: ${log_level}

# Enable Home Assistant API
api:

# OTA configuration for over-the-air updates
ota:
  - platform: esphome
    id: ota_esphome
  - platform: http_request
    id: ota_http_request

# Define the http_request component
http_request:
  useragent: esphome/1.1
  timeout: 10s
  verify_ssl: false

# WiFi configuration (Add your WiFi settings here)
wifi:

# I2C bus configuration
i2c:
  - id: bus_a
    sda: 21
    scl: 22
    scan: true

# Switch to control BME280 power (GPIO23 remains unchanged)
switch:
  - platform: gpio
    id: bme280_power
    pin:
      number: GPIO23  # GPIO23 is used for BME280 power
      mode: OUTPUT
      inverted: false
    restore_mode: ALWAYS_OFF

# Number for illuminance offset
number:
  - platform: template
    name: "Illuminance Offset"
    id: illuminance_offset_ui
    unit_of_measurement: "lx"
    min_value: -100
    max_value: 100
    step: 5
    mode: slider
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:brightness-5"
    entity_category: config
    on_value:
      - lambda: 'id(illuminance_sensor).update();'

# Define your sensors here
sensor:
  - platform: bh1750
    name: "Illuminance Sensor"
    id: illuminance_sensor
    i2c_id: bus_a
    address: 0x23
    update_interval: ${illuminance_update_interval}
    filters:
      - lambda: "return x + id(illuminance_offset_ui).state;"
      - clamp:
          min_value: 0

  - platform: bme280_i2c
    i2c_id: bus_a
    temperature:
      name: "Temperature"
      id: temperature_sensor
    pressure:
      name: "Pressure"
      id: pressure
    humidity:
      name: "Humidity"
      id: humidity
    address: 0x76
    update_interval: 5s

# Interval for periodic tasks (BME280 power cycling)
interval:
  - interval: 1min
    then:
      - switch.turn_on: bme280_power
      - delay: 10s
      - switch.turn_off: bme280_power

# Button to restart the ESP
button:
  - platform: restart
    icon: mdi:power-cycle
    name: "ESP Reboot"

# Flash the onboard red LED when sensor power is ON, move binary sensor to GPIO4
binary_sensor:
  - platform: gpio
    pin: GPIO4  # Changed from GPIO23 to GPIO4 for binary sensor
    name: "Sensor Power Control"
    on_press:
      - logger.log: "Sensor is powered on, flashing LED"
      - delay: 0.5s
      - output.turn_on: onboard_led
      - delay: 0.1s
      - output.turn_off: onboard_led
    on_release:
      - logger.log: "Sensor is powered off, turning off LED"
      - output.turn_off: onboard_led

# Flash the onboard red LED connected to GPIO2
output:
  - platform: gpio
    pin: GPIO2  # Onboard red LED for most ESP32 boards
    id: onboard_led
    inverted: false
