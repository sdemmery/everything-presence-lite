esphome:
  name: ${name}
  comment: Everything Presence Lite
  friendly_name: ${friendly_name}
  name_add_mac_suffix: True
  project:
    name: EverythingSmartTechnology.Everything Presence Lite
    version: "1.2.3"
  on_boot:
    priority: 600
    then:
      - switch.turn_on: 
          id: bme280_power  # Power on the sensor at boot
      - delay: 2s  # Give the sensor time to power on
      - i2c.scan:  # Scan the I2C bus after powering the sensor
      - delay: 30s  # Wait to allow sensor to stabilize
      - switch.turn_off: 
          id: bme280_power  # Turn off the sensor power after the scan

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# I2C bus configuration
i2c:
  - id: bus_a
    sda: 21
    scl: 22
    scan: true  # This will automatically scan the I2C bus on boot

# Switch to control BME280 power
switch:
  - platform: gpio
    id: bme280_power
    pin:
      number: GPIO23
      mode: OUTPUT
      inverted: false
    restore_mode: ALWAYS_OFF

# Define your sensors here
sensor:
  - platform: bh1750
    name: Illuminance
    id: illuminance_sensor
    i2c_id: bus_a
    address: 0x23
    update_interval: ${illuminance_update_interval}
    filters:
      - lambda: "return x + id(illuminance_offset_ui).state;"
      - clamp:
          min_value: 0
          
  - platform: bme280_i2c
    i2c_id: bus_a
    temperature:
      name: "Temperature"
      id: temperature_sensor
    pressure:
      name: "Pressure"
      id: pressure
    humidity:
      name: "Humidity"
      id: humidity
    address: 0x76
    update_interval: 5s  # Disable periodic updates since we control it manually

# Interval for periodic tasks
interval:
  - interval: 1min
    then:
      - switch.turn_on: 
          id: bme280_power  # Power on the sensor
      - delay: 20s  # Ensure sensor has stabilized
      - switch.turn_off: 
          id: bme280_power  # Turn off the sensor
